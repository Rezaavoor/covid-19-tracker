
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


/**
 * Ett program som visar den senaste statistiken om corona viruset i Sverige.
 * All data tas från Folkhälsomyndighetens API
 * 
 * @author Reza Hosseini
 */
public class MyFrame extends javax.swing.JFrame {

    ArrayList<Region> regioner = new ArrayList<>();
    ArrayList<Ålder> åldrar = new ArrayList<>();
    int sjukdomsFall, sjukdomsFallMän, // API:n hade bara statistik om män! så antal kvinnor = total-män
        intensivVårdade, intensivVårdadeMän,
        avlidna, avlidnaMän;

    /**
     * Creates new form MyFrame
     */
    public MyFrame() throws Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        buttonGroup.add(rBtnNyaFall);
        buttonGroup.add(rBtnRegion);
        buttonGroup.add(rBtnÅldersgrupp);
        panelData.setLayout(new java.awt.BorderLayout());
        panelData.setPreferredSize(new Dimension(100,400));
        
        updateData();
        showChart(1);//visa regioners statistik as default
        updateComboItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        panelData = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSjukdomsFall = new javax.swing.JLabel();
        txtSjukdomsFallKvinnor = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSjukdomsFallMän = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAvlidna = new javax.swing.JLabel();
        txtAvlidnaKvinnor = new javax.swing.JLabel();
        txtAvlidnaMän = new javax.swing.JLabel();
        txtIntensivVårdade = new javax.swing.JLabel();
        txtIntensivVårdadeKvinnor = new javax.swing.JLabel();
        txtIntensivVårdadeMän = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        comboRegion = new javax.swing.JComboBox<>();
        comboÅlder = new javax.swing.JComboBox<>();
        lblRes2 = new javax.swing.JLabel();
        btnCheck = new javax.swing.JButton();
        txtResultat = new javax.swing.JLabel();
        lblRes1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        rBtnRegion = new javax.swing.JRadioButton();
        rBtnÅldersgrupp = new javax.swing.JRadioButton();
        rBtnNyaFall = new javax.swing.JRadioButton();
        btnSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelData.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Sjukdomsfall");

        txtSjukdomsFall.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSjukdomsFall.setForeground(new java.awt.Color(204, 204, 0));
        txtSjukdomsFall.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSjukdomsFall.setText("18926");
        txtSjukdomsFall.setToolTipText("");

        txtSjukdomsFallKvinnor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSjukdomsFallKvinnor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSjukdomsFallKvinnor.setText("Kvinnor: 10358");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("|");

        txtSjukdomsFallMän.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSjukdomsFallMän.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSjukdomsFallMän.setText("Män: 8568");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Avlidna");

        txtAvlidna.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAvlidna.setForeground(new java.awt.Color(204, 0, 51));
        txtAvlidna.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtAvlidna.setText("2274");
        txtAvlidna.setToolTipText("");

        txtAvlidnaKvinnor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtAvlidnaKvinnor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtAvlidnaKvinnor.setText("Kvinnor: 351");

        txtAvlidnaMän.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtAvlidnaMän.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtAvlidnaMän.setText("Män: 8568");

        txtIntensivVårdade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtIntensivVårdade.setForeground(new java.awt.Color(153, 102, 0));
        txtIntensivVårdade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtIntensivVårdade.setText("18926");
        txtIntensivVårdade.setToolTipText("");

        txtIntensivVårdadeKvinnor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtIntensivVårdadeKvinnor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtIntensivVårdadeKvinnor.setText("Kvinnor: 10358");

        txtIntensivVårdadeMän.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtIntensivVårdadeMän.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtIntensivVårdadeMän.setText("Män: 8568");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Intensivvårdade");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("|");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("|");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Vill du veta om du överlever?!");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("I vilken region bor du?");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Hur gammal är du?");

        comboRegion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"loading"}));

        comboÅlder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblRes2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblRes2.setText("av alla corona smittade i din ålder och region har avlidid!!!!!");

        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        txtResultat.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtResultat.setForeground(new java.awt.Color(255, 0, 51));
        txtResultat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtResultat.setText("10%");

        lblRes1.setText("ca");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCheck))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(comboÅlder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186)
                .addComponent(lblRes1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtResultat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRes2)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(btnCheck))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(comboRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(comboÅlder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRes2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRes1)
                            .addComponent(txtResultat))))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        btnUpdate.setBackground(new java.awt.Color(204, 255, 204));
        btnUpdate.setFont(new java.awt.Font("Unispace", 1, 11)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 153, 0));
        btnUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdate.setText("UPDATE");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        rBtnRegion.setSelected(true);
        rBtnRegion.setText("Regioner");
        rBtnRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnRegionActionPerformed(evt);
            }
        });

        rBtnÅldersgrupp.setText("Åldersgrupper");
        rBtnÅldersgrupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnÅldersgruppActionPerformed(evt);
            }
        });

        rBtnNyaFall.setText("Ny fall");
        rBtnNyaFall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBtnNyaFallActionPerformed(evt);
            }
        });

        btnSort.setText("Sortera");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rBtnNyaFall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBtnRegion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBtnÅldersgrupp)
                        .addGap(38, 38, 38)
                        .addComponent(btnSort)
                        .addGap(528, 528, 528))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(txtSjukdomsFall, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(486, 486, 486)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAvlidnaKvinnor, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAvlidnaMän, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAvlidna, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(txtSjukdomsFallKvinnor, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSjukdomsFallMän, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIntensivVårdadeKvinnor, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIntensivVårdadeMän, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtIntensivVårdade, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13))
                        .addGap(187, 187, 187))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAvlidna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAvlidnaKvinnor)
                            .addComponent(txtAvlidnaMän)
                            .addComponent(jLabel14)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSjukdomsFall))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIntensivVårdade)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIntensivVårdadeKvinnor)
                                .addComponent(txtIntensivVårdadeMän)
                                .addComponent(jLabel15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSjukdomsFallKvinnor)
                                .addComponent(jLabel4)
                                .addComponent(txtSjukdomsFallMän)))))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(19, 19, 19)
                .addComponent(panelData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rBtnRegion)
                        .addComponent(rBtnÅldersgrupp)
                        .addComponent(rBtnNyaFall)))
                .addGap(45, 45, 45)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
        );

        getAccessibleContext().setAccessibleDescription("");
        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        checkRisk();
    }//GEN-LAST:event_btnCheckActionPerformed

    private void checkRisk() {
        //sökning
        String selectedRegion = comboRegion.getSelectedItem().toString();
        String selectedÅlder = comboÅlder.getSelectedItem().toString();
        Region region = null;
        Ålder ålder = null;
        for(Region r:regioner)if(selectedRegion.equals(r.getNamn()))region=r;
        for(Ålder å:åldrar)if(selectedÅlder.equals(å.getÅldersGrupp()))ålder=å;
        
        Person pers = new Person(region,ålder);
        pers.check();        
        txtResultat.setText(pers.toString());
        lblRes1.setText("ca");
        lblRes2.setText("av alla corona smittade i din ålder och region har avlidid!!!!!");
        
    }
    
    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        System.out.println("loading");
        try {
            updateData();
        } catch (IOException ex) {
            System.out.println("IO Error: "+ex);
        } catch (JSONException ex) {
            System.out.println("JSON Error: "+ex);
        } catch (FetchException ex) {
            System.out.println("Fetch Error: "+ex);
        }
        if(rBtnNyaFall.isSelected())showChart(0);
        else if(rBtnRegion.isSelected())showChart(1);
        else showChart(2);
        
        System.out.println("updated");
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void rBtnRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnRegionActionPerformed
        showChart(1);
    }//GEN-LAST:event_rBtnRegionActionPerformed

    private void rBtnNyaFallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnNyaFallActionPerformed
        showChart(0);
    }//GEN-LAST:event_rBtnNyaFallActionPerformed

    private void rBtnÅldersgruppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBtnÅldersgruppActionPerformed
        showChart(2);
    }//GEN-LAST:event_rBtnÅldersgruppActionPerformed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        sort();
        if(rBtnNyaFall.isSelected())showChart(0);
        else if(rBtnRegion.isSelected())showChart(1);
        else showChart(2);
    }//GEN-LAST:event_btnSortActionPerformed

    private void sort() {
        //bubble sort
        for(int m = regioner.size()-1; m>=0; m--){
            for(int n=0; n<m; n++){
                if(regioner.get(n).getTotaltAntalFall()<regioner.get(n+1).getTotaltAntalFall()){
                    Region temp = regioner.get(n);
                    regioner.set(n,regioner.get(n+1));
                    regioner.set(n+1,temp);
                }
            }
        }
        for(int m = åldrar.size()-1; m>=0; m--){
            for(int n=0; n<m; n++){
                if(åldrar.get(n).getTotaltAntalFall()<åldrar.get(n+1).getTotaltAntalFall()){
                    Ålder temp = åldrar.get(n);
                    åldrar.set(n,åldrar.get(n+1));
                    åldrar.set(n+1,temp);
                }
            }
        }
    }
    
    private void showChart(int chartNum) {
        Chart chart;
        switch (chartNum) {
            case 0:
                //ny fall
                chart = new Chart("Nya fall per region","region","antal",panelData);
                chart.setColor(Color.blue);
                chart.setDataset(regioner, 0);
                chart.setSize(100,400);
                chart.draw();
                break;
            case 1:
                //regioner
                chart = new Chart("Sjukdomsfall per region","region","antal",panelData);
                chart.setColor(Color.blue);
                chart.setDataset(regioner, 1);
                chart.setSize(100,400);
                chart.draw();
                break;
            case 2:
                //åldersgrupper
                chart = new Chart("Sjukdomsfall per åldersgrupp","åldersgrupp","antal",panelData);
                chart.setColor(Color.blue);
                chart.setDataset(åldrar, 2);
                chart.setSize(100,400);
                chart.draw();
                break;
            default:
                //regioner
                chart = new Chart("Sjukdomsfall per region","region","antal",panelData);
                chart.setColor(Color.blue);
                chart.setDataset(regioner, 1);
                chart.setSize(100,400);
                chart.draw();
                
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
               
                try {
                    new MyFrame().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                

                
                
            }
        });
    }
    
    public void updateData() throws IOException, JSONException, FetchException {
        regioner.clear();
        åldrar.clear();
        
        //folkhälsomyndighetens api
        String regionerUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/0/query?f=json&where=Region%20%3C%3E%20%27dummy%27&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&resultOffset=0&resultRecordCount=25&resultType=standard&cacheHint=true";
        String nyafallUrl  = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/1/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Statistikdatum%20desc&resultOffset=0&resultRecordCount=32000&resultType=standard&cacheHint=true";
        String totalAvlidnaUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_avlidna%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String totalAvlidnaMänUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=K%C3%B6n%3D%27Man%27&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_avlidna%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String intensivVårdadeUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_intensivv%C3%A5rdade%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String intensivVårdareMänUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=K%C3%B6n%3D%27Man%27&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_intensivv%C3%A5rdade%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String sjukdomsFallUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_fall%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String sjukdomsFallMänUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/3/query?f=json&where=K%C3%B6n%3D%27Man%27&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_fall%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String ålsersGruppSjukdomsFallUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/4/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&groupByFieldsForStatistics=%C3%85ldersgrupp2&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_fall%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";
        String ålsersGruppAvlidnaUrl = "https://services5.arcgis.com/fsYDFeRKu1hELJJs/arcgis/rest/services/FOHM_Covid_19_FME_1/FeatureServer/4/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&groupByFieldsForStatistics=%C3%85ldersgrupp2&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Totalt_antal_avlidna%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&resultType=standard&cacheHint=true";


        // få sensate statiskten om hela landet
        avlidna = fetch(totalAvlidnaUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        avlidnaMän = fetch(totalAvlidnaMänUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        intensivVårdade = fetch(intensivVårdadeUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        intensivVårdadeMän = fetch(intensivVårdareMänUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        sjukdomsFall = fetch(sjukdomsFallUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        sjukdomsFallMän = fetch(sjukdomsFallMänUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes").getInt("value");
        txtAvlidna.setText(String.valueOf(avlidna));
        txtAvlidnaKvinnor.setText("Kvinnor: "+String.valueOf(avlidna-avlidnaMän));
        txtAvlidnaMän.setText("Män: "+String.valueOf(avlidnaMän));
        txtSjukdomsFall.setText(String.valueOf(sjukdomsFall));
        txtSjukdomsFallKvinnor.setText("Kvinnor: "+String.valueOf(sjukdomsFall-sjukdomsFallMän));
        txtSjukdomsFallMän.setText("Män: "+String.valueOf(sjukdomsFallMän));
        txtIntensivVårdade.setText(String.valueOf(intensivVårdade));
        txtIntensivVårdadeKvinnor.setText("Kvinnor: "+String.valueOf(intensivVårdade-intensivVårdadeMän));
        txtIntensivVårdadeMän.setText("Män: "+String.valueOf(intensivVårdadeMän));

        // få statistiken om olika åldersgrupper
        JSONArray ålsersGruppSjukdomsFallData = fetch(ålsersGruppSjukdomsFallUrl).getJSONArray("features");
        JSONArray ålsersGruppAvlidnaData = fetch(ålsersGruppAvlidnaUrl).getJSONArray("features");
        for(int i=0; i<ålsersGruppSjukdomsFallData.length(); i++){
            String åldersGrupp = ålsersGruppSjukdomsFallData.getJSONObject(i).getJSONObject("attributes").getString("Åldersgrupp2");
            int ålderSjukdomsFall = ålsersGruppSjukdomsFallData.getJSONObject(i).getJSONObject("attributes").getInt("value");
            int ålderAvlidna = ålsersGruppAvlidnaData.getJSONObject(i).getJSONObject("attributes").getInt("value");
            Ålder ålder = new Ålder(åldersGrupp, ålderSjukdomsFall, ålderAvlidna);
            åldrar.add(ålder);
        }

        // få senaste statistiken om varje region + nya fall per region
        JSONArray regionerData = fetch(regionerUrl).getJSONArray("features"); // info om varje region
        JSONObject nyaFallData = fetch(nyafallUrl).getJSONArray("features").getJSONObject(0).getJSONObject("attributes"); // nya fall per region

        for(int i=0; i<regionerData.length(); i++){ //spara info om varje region i sitt eget klass
            JSONObject obj = regionerData.getJSONObject(i).getJSONObject("attributes");
            String namn = obj.getString("Region");
            if(namn.equals("Jämtland Härjedalen"))namn="Jämtland"; // en bugg där regionen heter Jämtland i en del av api och Jämtland Härjedalen i en annan del
            if(namn.equals("Sörmland"))namn="Södermanland"; // samma bugg
            if(namn.equals("Västra Götaland"))namn="Västra_Götaland"; // samma bugg

            int totaltAntalFall = obj.getInt("Totalt_antal_fall"),
                fallPer100000Inv = obj.getInt("Fall_per_100000_inv"),
                totaltAntalIntensVårdare = obj.getInt("Totalt_antal_intensivvårdade"),
                totaltAntalAvlidna = obj.getInt("Totalt_antal_avlidna"),
                nyaFall = nyaFallData.getInt(namn);
            Region region = new Region(namn, totaltAntalFall, fallPer100000Inv, totaltAntalIntensVårdare, totaltAntalAvlidna, nyaFall);
            regioner.add(region);
        }
        
        
    }
    
    private void updateComboItems() {
        comboRegion.removeAllItems();
        comboÅlder.removeAllItems();
        for(Region r:regioner) comboRegion.addItem(r.getNamn());
        for(Ålder å:åldrar) comboÅlder.addItem(å.getÅldersGrupp());
    }
    
    public JSONObject fetch(String u) throws IOException, JSONException, FetchException {
        URL url = new URL(u);
        HttpURLConnection con = (HttpURLConnection) url.openConnection();
        try{
            con.setRequestMethod("GET"); // get request till en rest api
        }
        catch(Exception e){ //apin fungerar inte eller något annat fel har uppkommit
            throw new FetchException(String.valueOf(e)); // våran FetchException accepterar bara String!
        }
        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuilder response = new StringBuilder();
        while ((inputLine = in.readLine()) != null) {
           response.append(inputLine);
        }
        in.close();
        JSONObject res = new JSONObject(response.toString()); //responsen
        
        return res;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnSort;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> comboRegion;
    private javax.swing.JComboBox<String> comboÅlder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblRes1;
    private javax.swing.JLabel lblRes2;
    private javax.swing.JPanel panelData;
    private javax.swing.JRadioButton rBtnNyaFall;
    private javax.swing.JRadioButton rBtnRegion;
    private javax.swing.JRadioButton rBtnÅldersgrupp;
    private javax.swing.JLabel txtAvlidna;
    private javax.swing.JLabel txtAvlidnaKvinnor;
    private javax.swing.JLabel txtAvlidnaMän;
    private javax.swing.JLabel txtIntensivVårdade;
    private javax.swing.JLabel txtIntensivVårdadeKvinnor;
    private javax.swing.JLabel txtIntensivVårdadeMän;
    private javax.swing.JLabel txtResultat;
    private javax.swing.JLabel txtSjukdomsFall;
    private javax.swing.JLabel txtSjukdomsFallKvinnor;
    private javax.swing.JLabel txtSjukdomsFallMän;
    // End of variables declaration//GEN-END:variables


    


}
